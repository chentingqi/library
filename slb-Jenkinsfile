#!groovy

@Library('library-test') _

def tools = new org.devops.tools()
def codePull = new org.devops.codePull()
def codeScan = new org.devops.codeScan()
def unitTest = new org.devops.unitTest()
def codeBuild = new org.devops.codeBuild()
def changeSlb = new org.devops.changeSlb()
def deployService = new org.devops.deployService()
def logCheck = new org.devops.logCheck()
def serviceCheck = new org.devops.serviceCheck()
def nexusPush = new org.devops.nexusPush()
//def mailSend = new org.devops.mailSend()

//String workspace = "/data/jenkins_home/workspace"

//Pipeline
pipeline {
    agent { node {  label "master"   //指定运行节点的标签或者名称
            }
    }

    options {
        timestamps()  //日志会有时间
        skipDefaultCheckout()  //删除隐式checkout scm语句
        disableConcurrentBuilds() //禁止并行
        buildDiscarder(logRotator(numToKeepStr: '5')) 
        timeout(time: 1, unit: 'HOURS')  //流水线超时设置1h
    }
    environment {
        giturl = "https://git.youlu.com/yunwei-devops/sonar-ali.git"
        gitbranch = "master"
        gitcert = "chenjingtao-git"
        jdkversion = "jdk8"
        buildType = "maven"
        buildShell = "/data/apache-maven-3.6.3/bin/mvn clean package -Dmaven.test.skip=true"
        DEV_IP = "192.168.10.83"
        TEST_IP = "192.168.10.83"
        UAT_IP = "192.168.10.83"
        PROD_IP = "192.168.10.83"
        DEPLOY_DIR = "/data/"
        DEPLOY_COMMAND = "/data/deploy_service.sh"
        JAR = "target/sonar-pmd-plugin-2.6.jar"
        APP_LOG = "/data/app.log"
        SERVICE_NAME = "salt"
        NEXUS_GROUP = "devops"
        NEXUS_SEVICE = "sonar-pmd-plugin"
        NEXUS_NAME1 = "sonar-pmd-plugin"
        NEXUS_NAME2 = "2.6"
        NEXUS_NAME = "sonar-pmd-plugin"
        BOOK = "changelist.txt"
        EMAILLIST = "cjt@youlu.com"

    }
    stages {
        stage("umount 59"){
                    steps{
                        timeout(time:20, unit:"MINUTES"){
                            script{
                                  print('卸载节点')
                                  tools.PrintMes("卸载节点172.16.106.59",'green')
                                  changeSlb.umountSlb("172.16.106.59")
                                  sleep 30
                            }
                        }
                    }
                }
        
        stage("mount 59"){
                    steps{
                        input id: '1', message: '是否恢复节点172.16.106.59', ok: '确定'
                        timeout(time:20, unit:"MINUTES"){
                            script{
                                  print('恢复节点')
                                  tools.PrintMes("恢复节点172.16.106.59",'green')
                                  changeSlb.mountSlb("172.16.106.59")
                            }
                        }
                    }
                }
        stage("umount 65"){
                    steps{
                        timeout(time:20, unit:"MINUTES"){
                            script{
                                  print('卸载节点')
                                  tools.PrintMes("卸载节点172.16.106.65",'green')
                                  changeSlb.umountSlb("172.16.106.65")
                                  sleep 30
                            }
                        }
                    }
                }
        stage("mount 65"){
                    steps{
                        timeout(time:20, unit:"MINUTES"){
                            script{
                                  print('恢复节点')
                                  tools.PrintMes("恢复节点172.16.106.65",'green')
                                  changeSlb.mountSlb("172.16.106.65")
                            }
                        }
                    }
                }
                
        
    }

}